import * as ts from "typescript";
import { CompilerOptions } from "./CompilerOptions";
import { OutputFile } from "./Emit";
import { TranspiledFile, TranspileResult } from "./Transpile";
export { parseCommandLine, ParsedCommandLine, updateParsedConfigFile, createDiagnosticReporter, } from "./CommandLineParser";
export * from "./CompilerOptions";
export * from "./Emit";
export * from "./LuaAST";
export { LuaLibFeature } from "./LuaLib";
export * from "./LuaPrinter";
export * from "./LuaTransformer";
export * from "./Transpile";
export * from "./TranspileError";
export interface TranspileFilesResult {
    diagnostics: ts.Diagnostic[];
    emitResult: OutputFile[];
}
export declare function transpileFiles(rootNames: string[], options?: CompilerOptions): TranspileFilesResult;
export declare function transpileProject(configFileName: string, optionsToExtend?: CompilerOptions): TranspileFilesResult;
export declare function transpileVirtualProject(files: Record<string, string>, options?: CompilerOptions): TranspileResult;
export interface TranspileStringResult {
    diagnostics: ts.Diagnostic[];
    file?: TranspiledFile;
}
export declare function transpileString(main: string, options?: CompilerOptions): TranspileStringResult;
