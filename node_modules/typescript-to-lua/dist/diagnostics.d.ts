import * as ts from "typescript";
import { TranspileError } from "./TranspileError";
export declare const transpileError: (error: TranspileError) => {
    file: ts.SourceFile;
    start: number;
    length: number;
    category: ts.DiagnosticCategory;
    code: number;
    source: string;
    messageText: string;
};
export declare const tstlOptionsAreMovingToTheTstlObject: (tstl: Record<string, any>) => {
    file: undefined;
    start: undefined;
    length: undefined;
    category: ts.DiagnosticCategory;
    code: number;
    source: string;
    messageText: string;
};
export declare const watchErrorSummary: (errorCount: number) => ts.Diagnostic;
export declare const unknownCompilerOption: (name: string) => ts.Diagnostic;
export declare const compilerOptionRequiresAValueOfType: (name: string, type: string) => ts.Diagnostic;
export declare const optionProjectCannotBeMixedWithSourceFilesOnACommandLine: () => ts.Diagnostic;
export declare const cannotFindATsconfigJsonAtTheSpecifiedDirectory: (dir: string) => ts.Diagnostic;
export declare const theSpecifiedPathDoesNotExist: (dir: string) => ts.Diagnostic;
export declare const compilerOptionExpectsAnArgument: (name: string) => ts.Diagnostic;
export declare const argumentForOptionMustBe: (name: string, values: string) => ts.Diagnostic;
export declare const optionBuildMustBeFirstCommandLineArgument: () => ts.Diagnostic;
