import * as ts from "typescript";
import { TranspileError } from "./TranspileError";
import { LuaTarget } from "./CompilerOptions";
export declare class TSTLErrors {
    static CouldNotCast: (castName: string) => Error;
    static CouldNotFindEnumMember: (enumDeclaration: ts.EnumDeclaration, enumMember: string, node: ts.Node) => TranspileError;
    static DefaultImportsNotSupported: (node: ts.Node) => TranspileError;
    static ForbiddenEllipsisDestruction: (node: ts.Node) => TranspileError;
    static ForbiddenForIn: (node: ts.Node) => TranspileError;
    static ForbiddenLuaTableSetExpression: (node: ts.Node) => TranspileError;
    static ForbiddenLuaTableNonDeclaration: (node: ts.Node) => TranspileError;
    static InvalidExtendsLuaTable: (node: ts.Node) => TranspileError;
    static InvalidInstanceOfLuaTable: (node: ts.Node) => TranspileError;
    static ForbiddenLuaTableUseException: (description: string, node: ts.Node) => TranspileError;
    static HeterogeneousEnum: (node: ts.Node) => TranspileError;
    static InvalidDecoratorArgumentNumber: (name: string, got: number, expected: number, node: ts.Node) => TranspileError;
    static InvalidDecoratorContext: (node: ts.Node) => TranspileError;
    static InvalidExtensionMetaExtension: (node: ts.Node) => TranspileError;
    static InvalidNewExpressionOnExtension: (node: ts.Node) => TranspileError;
    static InvalidExportDeclaration: (declaration: ts.ExportDeclaration) => TranspileError;
    static InvalidExtendsExtension: (node: ts.Node) => TranspileError;
    static InvalidExportsExtension: (node: ts.Node) => TranspileError;
    static InvalidInstanceOfExtension: (node: ts.Node) => TranspileError;
    static InvalidJsonFileContent: (node: ts.Node) => TranspileError;
    static InvalidPropertyCall: (node: ts.Node) => TranspileError;
    static InvalidElementCall: (node: ts.Node) => TranspileError;
    static InvalidThrowExpression: (node: ts.Node) => TranspileError;
    static ForbiddenStaticClassPropertyName: (node: ts.Node, name: string) => TranspileError;
    static MissingClassName: (node: ts.Node) => TranspileError;
    static MissingForOfVariables: (node: ts.Node) => TranspileError;
    static MissingFunctionName: (declaration: ts.FunctionLikeDeclaration) => TranspileError;
    static MissingMetaExtension: (node: ts.Node) => TranspileError;
    static MissingSourceFile: () => Error;
    static UndefinedFunctionDefinition: (functionSymbolId: number) => Error;
    static UndefinedScope: () => Error;
    static UndefinedTypeNode: (node: ts.Node) => TranspileError;
    static UnknownSuperType: (node: ts.Node) => TranspileError;
    static UnsupportedDefaultExport: (node: ts.Node) => TranspileError;
    static UnsupportedImportType: (node: ts.Node) => TranspileError;
    static UnsupportedKind: (description: string, kind: ts.SyntaxKind, node: ts.Node) => TranspileError;
    static UnsupportedProperty: (parentName: string, property: string, node: ts.Node) => TranspileError;
    static UnsupportedForTarget: (functionality: string, version: LuaTarget, node: ts.Node) => TranspileError;
    static UnsupportedFunctionWithoutBody: (node: ts.FunctionLikeDeclaration) => TranspileError;
    static UnsupportedNoSelfFunctionConversion: (node: ts.Node, name?: string | undefined) => TranspileError;
    static UnsupportedSelfFunctionConversion: (node: ts.Node, name?: string | undefined) => TranspileError;
    static UnsupportedOverloadAssignment: (node: ts.Node, name?: string | undefined) => TranspileError;
    static UnsupportedNonDestructuringLuaIterator: (node: ts.Node) => TranspileError;
    static UnresolvableRequirePath: (node: ts.Node, reason: string, path?: string | undefined) => TranspileError;
    static ReferencedBeforeDeclaration: (node: ts.Identifier) => TranspileError;
    static UnsupportedObjectDestructuringInForOf: (node: ts.Node) => TranspileError;
    static InvalidAmbientIdentifierName: (node: ts.Identifier) => TranspileError;
}
